--- a/emojify	2019-09-26 15:33:29.766794114 +0300
+++ b/emojify	2019-09-26 15:39:57.335491686 +0300
@@ -1,4 +1,4 @@
-#!/usr/bin/env bash
+# BEGIN mrowa44.emojify
 #
 # emojify
 # https://github.com/mrowa44/emojify
@@ -22,10 +22,10 @@
 
 emojify_version=2.1.0
 
-# List generated by 
+# List generated by
 # https://gist.github.com/GrenderG/fd4eb4c73eadad219b0ecb5f9345070a#file-emoji_scrap-py
 # and emoji_scrap_github.py
-declare -A emojis=(
+declare -A emojify.emojis=(
     [":100:"]="\U1f4af"
     [":1234:"]="\U1f522"
     [":1st_place_medal:"]="\U1f947"
@@ -370,7 +370,7 @@
     [":capital_abcd:"]="\U1f520"
     [":capricorn:"]="\U2651"
     [":card_box:"]="\U1f5c3"
-    [":card_file_box:"]="\U1f5c3"    
+    [":card_file_box:"]="\U1f5c3"
     [":card_file_box:"]="\U1f5c3\Ufe0f"
     [":card_index_dividers:"]="\U1f5c2\Ufe0f"
     [":card_index:"]="\U1f4c7"
@@ -1991,7 +1991,7 @@
     [":popcorn:"]="\U1f37f"
     [":portugal:"]="\U1f1f5\U1f1f9"
     [":postal_horn:"]="\U1f4ef"
-    [":postbox:"]="\U1f4ee"    
+    [":postbox:"]="\U1f4ee"
     [":postbox:"]="\U1f4ee"
     [":post_office:"]="\U1f3e3"
     [":potable_water:"]="\U1f6b0"
@@ -2794,13 +2794,13 @@
 
 # Gets emoji from the associative array
 # Returns raw emoji character or original token
-emojify_token () {
-    local value=${emojis[$1]}
+emojify.token () {
+    local value=${emojify.emojis[$1]}
     [[ -n $value ]] && echo -e "$value" || echo "$1"
 }
 
 # Function to emojify a line.
-emojify_line () {
+emojify.line () {
     line=$*
     current_token=""
     emojified_line=""
@@ -2818,7 +2818,7 @@
         else
             # finishing the current token.
             if [[ $current_char =~ ^:$ ]]; then
-                emojified_token=$(emojify_token "$current_token$current_char")
+                emojified_token=$(emojify.token "$current_token$current_char")
 
                 # nothing changed. we still need the ending ':' as it might
                 # serve for an upcoming emoji üòÅüòÅüéâüéâ
@@ -2845,7 +2845,7 @@
 }
 
 # Function to print help info.
-help () {
+emojify.help () {
     cat <<EOF
     emojify - emoji on the command line üò±
 
@@ -2853,15 +2853,15 @@
 EOF
     if [[ 'list' == "$1" ]]; then
         echo 'Supported emojis:'
-        for key in "${!emojis[@]}"; do
-            echo -e "$key ${emojis[$key]}"
+        for key in "${!emojify.emojis[@]}"; do
+            echo -e "$key ${emojify.emojis[$key]}"
         done
     fi
     exit 0
 }
 
 # Checks the installed bash version to see if it's compatible with emojify
-check_version () {
+emojify.check_version () {
     if (( ${BASH_VERSION%%.*} >= 4 )); then
         return
     else
@@ -2871,31 +2871,4 @@
         exit 0
     fi
 }
-
-# If arguments are provided on the command line then check for supported help
-# options or process the arguments as emoji names.
-if [[ -n $1 ]]; then
-    case $1 in
-    '-h' | '--help' )
-        help
-        ;;
-
-    '-l' | '--list' )
-        help list
-        ;;
-
-    '-v' | '--version' )
-        echo $emojify_version
-        ;;
-
-    * )
-        check_version
-        emojify_line "$*"
-        ;;
-    esac
-else
-    check_version
-    while IFS=''; read -r line || [ -n "$line" ]; do
-        emojify_line "$line"
-    done
-fi
+# END mrowa44.emojify
